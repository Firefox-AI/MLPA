name: Build and Push Docker Image to Google Artifact Registry

on:
  push:
    branches:
      - main

env:
  COMPOSE_FILE: ./mlpa_docker_compose.yaml
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GAR_REPOSITORY: mlpa
  SERVICE_NAME: mlpa
  IMAGE_NAME: mlpa

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Google Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build the Docker image with Docker Compose
        run: docker compose -f ${{ env.COMPOSE_FILE }} build ${{ env.SERVICE_NAME }}

      - name: Tag the Docker image for GAR
        run: |
          # The local image is named 'mlpa:latest' as defined in the compose file
          LOCAL_IMAGE_TAG="${{ env.IMAGE_NAME }}:latest"

          # The full name for the image in Google Artifact Registry
          FULL_IMAGE_NAME="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"

          echo "Tagging local image '$LOCAL_IMAGE_TAG' as '$FULL_IMAGE_NAME'"
          docker tag $LOCAL_IMAGE_TAG $FULL_IMAGE_NAME

          echo "IMAGE_NAME=${FULL_IMAGE_NAME}" >> $GITHUB_ENV
        shell: bash

      - name: Push the Docker image to Google Artifact Registry
        run: docker push ${{ env.IMAGE_NAME }}
